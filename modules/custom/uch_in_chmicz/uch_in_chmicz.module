<?php

/**
 * @file
 * Contains uch_in_chmicz.module..
 */

use \Drupal\node\Entity\Node;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function uch_in_chmicz_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the uch_in_chmicz module.
    case 'help.page.uch_in_chmicz':
      $output = '';

      // @ToDo: easy way to test this import...
      uch_in_chmicz_cron();
      $output .= 'Testing uch_in_chmicz_cron()<br>';

      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('UCH Import chmi.cz') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_cron().
 */
function uch_in_chmicz_cron() {
  try {
    $client = \Drupal::service('http_client');
    $result = $client->get('http://portal.chmi.cz/files/portal/docs/uoco/web_generator/aqindex_cze.json', ['Accept' => 'application/json']);
    $data = json_decode($result->getBody());

    foreach ($data->States as $state) {
      foreach ($state->Regions as $region) {
        foreach ($region->Stations as $station) {
          if (property_exists($station, "Lat") && property_exists($station, "Ix") &&
            $station->Ix > 0
          ) {

            $notification = Node::create(['type' => 'notification']);

            switch ($station->Ix) {
              case 1:
                $notification->set('field_category', [0 => ['target_id' => 8]]);
                $notification->set('title', $station->Name . ': Velmi dobré ovzduší');
                $notification->set('field_perex', $station->Name . ': Velmi dobre ovzdusi (' . $station->Ix . ')');
                $notification->set('field_description', $station->Name . ': Velmi dobré ovzduší (úrověň ' . $station->Ix . ')');
                break;

              case 2:
                $notification->set('field_category', [0 => ['target_id' => 8]]);
                $notification->set('title', $station->Name . ': Dobré ovzduší');
                $notification->set('field_perex', $station->Name . ': Dobre ovzdusi (' . $station->Ix . ')');
                $notification->set('field_description', $station->Name . ': Dobré ovzduší (úrověň ' . $station->Ix . ')');
                break;

              case 3:
                $notification->set('field_category', [0 => ['target_id' => 8]]);
                $notification->set('title', $station->Name . ': Uspokojivé ovzduší');
                $notification->set('field_perex', $station->Name . ': Uspokojive ovzdusi (' . $station->Ix . ')');
                $notification->set('field_description', $station->Name . ': Uspokojivé ovzduší (úrověň ' . $station->Ix . ')');
                break;

              case 4:
                $notification->set('field_category', [0 => ['target_id' => 7]]);
                $notification->set('title', $station->Name . ': Vyhovující ovzduší');
                $notification->set('field_perex', $station->Name . ': Vyhovujici ovzdusi (' . $station->Ix . ')');
                $notification->set('field_description', $station->Name . ': Vyhovující ovzduší (úrověň ' . $station->Ix . ')');
                break;

              case 5:
                $notification->set('field_category', [0 => ['target_id' => 7]]);
                $notification->set('title', $station->Name . ': Špatné ovzduší');
                $notification->set('field_perex', $station->Name . ': Spatne ovzdusi (' . $station->Ix . ')');
                $notification->set('field_description', $station->Name . ': Špatné ovzduší (úrověň ' . $station->Ix . ')');
                break;

              case 6:
                $notification->set('field_category', [0 => ['target_id' => 7]]);
                $notification->set('title', $station->Name . ': Velmi špatné ovzduší');
                $notification->set('field_perex', $station->Name . ': Velmi spatne ovzdusi (' . $station->Ix . ')');
                $notification->set('field_description', $station->Name . ': Velmi špatné ovzduší (úrověň ' . $station->Ix . ')');
                break;

              default:
                $notification->set('title', 'Ovzduší̈́ v ' . $station->Name);
                $notification->set('field_perex', 'Ovzdusḯ v ' . $station->Name);
                $notification->set('field_description', 'Ovzduší̈́ v ' . $station->Name);
                break;
            }

            // Map importance pseudo-intelligently.
            $notification->set('field_importance', _uch_in_chmicz_map($station->Ix, 1, 6, 0, 0, 8));
            $notification->set('field_time_start', [
              0 => [
                "value" => time(),
              ],
            ]);
            $notification->set('field_time_end', [
              0 => [
                "value" => time() + (60 * 60),
              ],
            ]);
            $notification->set('field_location', [
              0 => [
                "lat" => $station->Lat,
                "lng" => $station->Lon,
              ],
            ]);
            $notification->enforceIsNew();
            $notification->save();
          }
        }
      }
    }
  }
  catch (Exception $exception) {
    // Import failed
    \Drupal::logger('uch_in')->notice('Unable to connect to portal.chmi.cz');
  }
}

function _uch_in_chmicz_map($value, $fromLow, $fromHigh, $toLow, $toHigh) {
  $fromRange = $fromHigh - $fromLow;
  $toRange = $toHigh - $toLow;
  $scaleFactor = $toRange / $fromRange;

  // Re-zero the value within the from range
  $tmpValue = $value - $fromLow;
  // Rescale the value to the to range
  $tmpValue *= $scaleFactor;
  // Re-zero back to the to range
  return $tmpValue + $toLow;
}
